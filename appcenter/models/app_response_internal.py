# coding: utf-8

"""
    App Center Client

    Microsoft Visual Studio App Center API  # noqa: E501

    OpenAPI spec version: preview
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from appcenter.models.app_response import AppResponse  # noqa: F401,E501
from appcenter.models.azure_subscription_response import AzureSubscriptionResponse  # noqa: F401,E501


class AppResponseInternal(AppResponse):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'feature_flags': 'list[str]',
        'repositories': 'list[object]',
        'cutover_from_hockeyapp_at': 'str'
    }
    if hasattr(AppResponse, "swagger_types"):
        swagger_types.update(AppResponse.swagger_types)

    attribute_map = {
        'feature_flags': 'feature_flags',
        'repositories': 'repositories',
        'cutover_from_hockeyapp_at': 'cutover_from_hockeyapp_at'
    }
    if hasattr(AppResponse, "attribute_map"):
        attribute_map.update(AppResponse.attribute_map)

    def __init__(self, feature_flags=None, repositories=None, cutover_from_hockeyapp_at=None, *args, **kwargs):  # noqa: E501
        """AppResponseInternal - a model defined in Swagger"""  # noqa: E501
        self._feature_flags = None
        self._repositories = None
        self._cutover_from_hockeyapp_at = None
        self.discriminator = None
        if feature_flags is not None:
            self.feature_flags = feature_flags
        if repositories is not None:
            self.repositories = repositories
        if cutover_from_hockeyapp_at is not None:
            self.cutover_from_hockeyapp_at = cutover_from_hockeyapp_at
        AppResponse.__init__(self, *args, **kwargs)

    @property
    def feature_flags(self):
        """Gets the feature_flags of this AppResponseInternal.  # noqa: E501

        The feature flags that are enabled for this app  # noqa: E501

        :return: The feature_flags of this AppResponseInternal.  # noqa: E501
        :rtype: list[str]
        """
        return self._feature_flags

    @feature_flags.setter
    def feature_flags(self, feature_flags):
        """Sets the feature_flags of this AppResponseInternal.

        The feature flags that are enabled for this app  # noqa: E501

        :param feature_flags: The feature_flags of this AppResponseInternal.  # noqa: E501
        :type: list[str]
        """

        self._feature_flags = feature_flags

    @property
    def repositories(self):
        """Gets the repositories of this AppResponseInternal.  # noqa: E501

        The repositories associated with this app  # noqa: E501

        :return: The repositories of this AppResponseInternal.  # noqa: E501
        :rtype: list[object]
        """
        return self._repositories

    @repositories.setter
    def repositories(self, repositories):
        """Sets the repositories of this AppResponseInternal.

        The repositories associated with this app  # noqa: E501

        :param repositories: The repositories of this AppResponseInternal.  # noqa: E501
        :type: list[object]
        """

        self._repositories = repositories

    @property
    def cutover_from_hockeyapp_at(self):
        """Gets the cutover_from_hockeyapp_at of this AppResponseInternal.  # noqa: E501

        The cutover date of this app  # noqa: E501

        :return: The cutover_from_hockeyapp_at of this AppResponseInternal.  # noqa: E501
        :rtype: str
        """
        return self._cutover_from_hockeyapp_at

    @cutover_from_hockeyapp_at.setter
    def cutover_from_hockeyapp_at(self, cutover_from_hockeyapp_at):
        """Sets the cutover_from_hockeyapp_at of this AppResponseInternal.

        The cutover date of this app  # noqa: E501

        :param cutover_from_hockeyapp_at: The cutover_from_hockeyapp_at of this AppResponseInternal.  # noqa: E501
        :type: str
        """

        self._cutover_from_hockeyapp_at = cutover_from_hockeyapp_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AppResponseInternal, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AppResponseInternal):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
